<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace speakeasy_bar-test\Risk-Cloud-API;

class Workflow 
{

	private SDKConfiguration $sdkConfiguration;

	/**
	 * @param SDKConfiguration $sdkConfig
	 */
	public function __construct(SDKConfiguration $sdkConfig)
	{
		$this->sdkConfiguration = $sdkConfig;
	}
	
    /**
     * Create a workflow
     * 
     * **Permissions:** [Build Access to parent application](https://help.logicgate.com/hc/en-us/articles/4402683190164-Control-Build-Access-for-Applications)
     * 
     * Create a workflow from a JSON request body. The workflow will contain a Default Origin step and a Default End step.
     * 
     * @param \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\CreateWorkflowRequest $request
     * @return \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\CreateWorkflowResponse
     */
	public function create(
        \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\CreateWorkflowRequest $request,
    ): \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\CreateWorkflowResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/api/v2/workflows');
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "workflowApiCreateIn", "json");
        if ($body === null) {
            throw new \Exception('Request body is required');
        }
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        if (!array_key_exists('headers', $options)) {
            $options['headers'] = [];
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\CreateWorkflowResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->workflowApiOut = $serializer->deserialize((string)$httpResponse->getBody(), 'speakeasy_bar-test\Risk-Cloud-API\Models\Shared\WorkflowApiOut', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Delete a workflow
     * 
     * **Permissions:** [Build Access to parent application](https://help.logicgate.com/hc/en-us/articles/4402683190164-Control-Build-Access-for-Applications)
     * 
     * Delete a workflow specified by the ID in the URL path.
     * 
     * @param \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\DeleteWorkflowRequest $request
     * @return \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\DeleteWorkflowResponse
     */
	public function delete(
        ?\speakeasy_bar-test\Risk-Cloud-API\Models\Operations\DeleteWorkflowRequest $request,
    ): \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\DeleteWorkflowResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/api/v2/workflows/{id}', \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\DeleteWorkflowRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        if (!array_key_exists('headers', $options)) {
            $options['headers'] = [];
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\DeleteWorkflowResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->appActionResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'speakeasy_bar-test\Risk-Cloud-API\Models\Shared\AppActionResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Retrieve a workflow
     * 
     * **Permissions:** [Build Access to parent application](https://help.logicgate.com/hc/en-us/articles/4402683190164-Control-Build-Access-for-Applications)
     * 
     * Retrieve a workflow specified by the ID in the URL path.
     * 
     * @param \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\ReadWorkflowRequest $request
     * @return \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\ReadWorkflowResponse
     */
	public function read(
        ?\speakeasy_bar-test\Risk-Cloud-API\Models\Operations\ReadWorkflowRequest $request,
    ): \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\ReadWorkflowResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/api/v2/workflows/{id}', \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\ReadWorkflowRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        if (!array_key_exists('headers', $options)) {
            $options['headers'] = [];
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\ReadWorkflowResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->workflowApiOut = $serializer->deserialize((string)$httpResponse->getBody(), 'speakeasy_bar-test\Risk-Cloud-API\Models\Shared\WorkflowApiOut', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Retrieve workflows
     * 
     * **Permissions:** [Build Access](https://help.logicgate.com/hc/en-us/articles/4402683190164-Control-Build-Access-for-Applications)
     * 
     * Retrieve a page of all workflows that the current user has [Build Access to parent application](https://help.logicgate.com/hc/en-us/articles/4402683190164-Control-Build-Access-for-Applications) to.
     * 
     * @param \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\ReadAllWorkflowsRequest $request
     * @return \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\ReadAllWorkflowsResponse
     */
	public function readAll(
        ?\speakeasy_bar-test\Risk-Cloud-API\Models\Operations\ReadAllWorkflowsRequest $request,
    ): \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\ReadAllWorkflowsResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/api/v2/workflows');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\speakeasy_bar-test\Risk-Cloud-API\Models\Operations\ReadAllWorkflowsRequest::class, $request, null));
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        if (!array_key_exists('headers', $options)) {
            $options['headers'] = [];
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\ReadAllWorkflowsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->pageModelOutWorkflowApiOut = $serializer->deserialize((string)$httpResponse->getBody(), 'speakeasy_bar-test\Risk-Cloud-API\Models\Shared\PageModelOutWorkflowApiOut', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Update a workflow
     * 
     * **Permissions:** [Build Access to parent application](https://help.logicgate.com/hc/en-us/articles/4402683190164-Control-Build-Access-for-Applications)
     * 
     * Update a workflow specified by the ID in the URL path from a JSON request body. Only present properties with non-empty values are updated.
     * 
     * @param \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\UpdateWorkflowRequest $request
     * @return \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\UpdateWorkflowResponse
     */
	public function update(
        \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\UpdateWorkflowRequest $request,
    ): \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\UpdateWorkflowResponse
    {
        $baseUrl = $this->sdkConfiguration->getServerUrl();
        $url = Utils\Utils::generateUrl($baseUrl, '/api/v2/workflows/{id}', \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\UpdateWorkflowRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "workflowApiUpdateIn", "json");
        if ($body === null) {
            throw new \Exception('Request body is required');
        }
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        if (!array_key_exists('headers', $options)) {
            $options['headers'] = [];
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;
        
        $httpResponse = $this->sdkConfiguration->securityClient->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \speakeasy_bar-test\Risk-Cloud-API\Models\Operations\UpdateWorkflowResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->workflowApiOut = $serializer->deserialize((string)$httpResponse->getBody(), 'speakeasy_bar-test\Risk-Cloud-API\Models\Shared\WorkflowApiOut', 'json');
            }
        }

        return $response;
    }
}